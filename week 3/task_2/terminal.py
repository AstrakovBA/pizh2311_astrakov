class Терминал:
    """Класс, представляющий терминал пиццерии."""

    def __init__(self):
        """Инициализация терминала с меню пицц."""
        self.меню = [
            ПиццаПепперони(),
            ПиццаБарбекю(),
            ПиццаДарыМоря()
        ]
        self.заказ = Заказ()
        self.отображать_меню = True

        def __str__(self):
            """Возвращает строковое представление меню."""
            return "\n".join(f"{i + 1}. {pizza}" for i, pizza in enumerate(self.меню))

    def начать(self):
        """Запускает процесс заказа пиццы."""
        print("Добро пожаловать в Пиццерию!")
        while self.отображать_меню:
            print("\nМеню:")
            print(self)
            выбор = input("Введите номер пиццы для добавления в заказ (или 0 для подтверждения): ")
            if выбор.isdigit():
                выбор = int(выбор)
                if выбор == 0:
                    self.подтвердить_заказ()
                elif 1 <= выбор <= len(self.меню):
                    self.заказ.добавить(self.меню[выбор - 1])
                    print(f"Пицца {self.меню[выбор - 1].название} добавлена в заказ.")
                else:
                    print("Неверный номер. Пожалуйста, попробуйте снова.")
            else:
                print("Пожалуйста, введите число.")

    def подтвердить_заказ(self):
        """Подтверждает заказ и отображает итоговую сумму."""
        общая_сумма = self.заказ.сумма()
        print(f"Общая сумма вашего заказа: {общая_сумма} руб.")
        оплата = input("Введите сумму для оплаты: ")
        if оплата.isdigit() and int(оплата) >= общая_сумма:
            print("Спасибо за ваш заказ! Приятного аппетита!")
            self.заказ.выполнить()
            self.отображать_меню = False
        else:
            print("Недостаточная сумма для оплаты. Попробуйте снова.")
